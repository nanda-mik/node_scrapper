{"version":3,"sources":["component/table/table.js","component/Spinner/Spinner.js","component/cards/cards.js","component/main/main.js","App.js","index.js","component/Spinner/Spinner.module.css"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","width","container","maxHeight","App","classes","useState","rows","setState","React","page","setPage","rowsPerPage","setRowsPerPage","redirect","setRedirect","useEffect","fetch","method","then","res","json","data","redir","to","className","Button","variant","onClick","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","align","TableBody","slice","map","row","key","url","component","scope","lastmod","total_words","keyword","no_int_link","no_doF_link","no_noF_link","isKeyPresent_para","isKeyPresent_meta","isKeyPresent_title","title_length","meta_length","keyword_density","no_of_tags","no_of_brokeimg","no_of_404","no_other_link","isKeyPresent_img","no_of_img","author","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","Spinner","Styles","Cards","onSubmit","state","this","Component","Main","inputChange","e","page_url","handleSubmit","a","message","willAppear","preventDefault","pageUrl","loading","Axios","post","result","console","log","name","id","placeholder","onChange","type","style","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f033e7fc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './table.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 600\r\n  }\r\n});\r\n\r\nexport default function App(){\r\n    const classes = useStyles();\r\n    const [rows, setState] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(()=>{\r\n      fetch('http://165.22.214.114/getData',{\r\n            method: 'GET'\r\n        })\r\n          .then(res => res.json())\r\n          .then(data => setState(data))\r\n    })\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    \r\n    const handleChangeRowsPerPage = event => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n      setRedirect(true);\r\n    }\r\n\r\n    let redir = null;\r\n    if(redirect){\r\n      redir = <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"table\">\r\n         <div className=\"btn-table\"><Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Home</Button></div>\r\n        <h2>Content Analysis- StartupTalky</h2>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Page URL</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Last modified</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Total WOrds</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keywords</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of int. links</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of do-follow ext. link</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of no-follow ext. link</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in 1st para</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in meta</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in title</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Title length</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Meta length</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword density</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of tags</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Broken image</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">404 external link</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Other article linking.</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in image alt name</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of images</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Author anime</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map(row => (\r\n                    <StyledTableRow key={row.url}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {row.url}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.lastmod}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.total_words}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.keyword}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_int_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_doF_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_noF_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_para}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_meta}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_title}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.title_length}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.meta_length}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.keyword_density}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_tags}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_brokeimg}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_404}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_other_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_img}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_img}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.author}</StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 15, 20]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        {redir}\r\n      </div>\r\n      );\r\n}\r\n","\n\nimport React from \"react\";\nimport Styles from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return (\n    <div className={Styles.Spinner}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React,{ Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./cards.css\";\r\n\r\n\r\nclass Cards extends Component {\r\n \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n    onSubmit = () => {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render(){\r\n        let redirect = null;\r\n        if(this.state.redirect){\r\n            redirect = <Redirect to=\"/table\" />\r\n        }\r\n        return(\r\n            <div>\r\n            <div className=\"added-sites\">\r\n                <h3>Websites under monitor</h3>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onSubmit}>StartupTalky</Button>\r\n            </div>\r\n            {redirect}\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Cards;","import React, { Component } from 'react';\r\nimport './main.css'\r\nimport { Button } from '@material-ui/core';\r\nimport Axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Cards from \"../cards/cards\";\r\n\r\nclass Main extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            page_url: \"\",\r\n            loading: false,\r\n            message: null,\r\n            willAppear: null\r\n        }\r\n    }\r\n\r\n    inputChange = (e) => {\r\n        this.setState({page_url: e.target.value});\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        this.setState({ message: null, willAppear: null });\r\n        e.preventDefault();\r\n        const pageUrl = this.state.page_url;\r\n        const url = \"http://165.22.214.114/addScrapper\";\r\n        try{\r\n            this.setState({loading: true});\r\n            const result = await Axios.post(url,{pageUrl: pageUrl});\r\n            console.log(result);\r\n            this.setState({\r\n                message: result.data.message,\r\n                willAppear: result.data.name\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <h2>Enter websites to monitor</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input id=\"input\" className=\"input\" placeholder=\"Add website\" onChange={this.inputChange}></input>\r\n                        <div className=\"btn\"><Button variant=\"contained\" type=\"submit\" color=\"primary\">Add Website</Button></div>\r\n                    </form>\r\n                </div>\r\n                {this.state.message ? (\r\n                    <div style={{ color: \"black\" }}>{this.state.message}</div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {this.state.willAppear ? <Cards /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React,{ Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Table from './component/table/table';\nimport Main from './component/main/main';\n\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Main />\n            </Route>\n            <Route exact path=\"/table\">\n              <Table />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3lg6J\"};"],"sourceRoot":""}