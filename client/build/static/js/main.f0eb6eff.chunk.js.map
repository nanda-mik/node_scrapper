{"version":3,"sources":["component/table/table.js","component/Spinner/Spinner.js","component/cards/cards.js","component/cardlist/cardlist.js","component/main/main.js","App.js","index.js","component/Spinner/Spinner.module.css"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","width","container","maxHeight","App","classes","useState","rows","setState","React","page","setPage","rowsPerPage","setRowsPerPage","redirect","setRedirect","editing","setEdit","key","setKey","id","useParams","slice","useEffect","fetch","method","then","res","json","data","onSave","e","target","value","onFinal","a","url","Axios","post","keyword","result","console","log","redir","to","className","Button","variant","onClick","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","align","TableBody","map","row","_id","component","scope","lastmod","total_words","type","defaultValue","onChange","trigger","no_int_link","modal","close","int_link","no_doF_link","dF_ext_link","no_noF_link","nf_ext_link","isKeyPresent_para","isKeyPresent_meta","isKeyPresent_title","title_length","meta_length","keyword_density","no_of_tags","tag_array","no_of_brokeimg","no_other_link","other_linkArticle","isKeyPresent_img","no_of_img","img_array","author","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","Spinner","Styles","Cards","props","onSubmit","state","this","name","Component","Cardlist","sites","class","site","link","Main","inputChange","page_url","handleSubmit","message","willAppear","preventDefault","pageUrl","loading","placeholder","style","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f0eb6eff.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './table.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Axios from 'axios';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 600\r\n  }\r\n});\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [rows, setState] = useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [editing, setEdit] = useState(false);\r\n  const [key, setKey] = useState(\" \");\r\n\r\n\r\n  let { id } = useParams();\r\n  id = id.slice(1);\r\n  useEffect(() => {\r\n    fetch('http://165.22.214.114/api/getData/' + id, {\r\n      method: 'GET'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setState(data))\r\n  })\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setRedirect(true);\r\n  }\r\n\r\n  const onEdit = () =>{\r\n    setEdit(true);\r\n  }\r\n\r\n  const onSave = (e) =>{\r\n    setKey(e.target.value);\r\n  }\r\n\r\n  const onFinal = async (id) => {\r\n    const url = \"http://165.22.214.114/api/editKey/\"+ id;\r\n    const result = await Axios.post(url,{keyword: key});\r\n    console.log(result);\r\n  }\r\n\r\n  let redir = null;\r\n  if (redirect) {\r\n    redir = <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <div className=\"btn-table\"><Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Home</Button></div>\r\n      <h2>Content Analysis</h2>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Page URL</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Last modified</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Total WOrds</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keywords</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of int. links</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of do-follow ext. link</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of no-follow ext. link</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keyword in 1st para</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keyword in meta</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keyword in title</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Title length</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Meta length</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keyword density</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of tags</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Broken image</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Other article linking.</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Keyword in image alt name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">No of images</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Author anime</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(row => (\r\n                  <StyledTableRow key={row._id}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.url}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.lastmod}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.total_words}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{editing ?(<input type=\"text\" defaultValue={row.keyword} onChange={onSave}></input>): (<span>{row.keyword}</span>)}{editing ? <Button onClick={() => onFinal(row._id)}>Save</Button> : <Button onClick={() => onEdit()}>Edit</Button>}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_int_link}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.int_link}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_doF_link}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.dF_ext_link}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_noF_link}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.nf_ext_link}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.isKeyPresent_para}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.isKeyPresent_meta}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.isKeyPresent_title}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.title_length}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.meta_length}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.keyword_density}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_of_tags}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.tag_array}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.no_of_brokeimg}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_other_link}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.other_linkArticle}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.isKeyPresent_img}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Popup trigger={<button>{row.no_of_img}</button>} modal>\r\n                        {close => (\r\n                          <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                              &times;\r\n                            </a>\r\n                            <div className=\"content\">\r\n                              {row.img_array}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.author}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[15, 20, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {redir}\r\n    </div>\r\n  );\r\n}\r\n","\n\nimport React from \"react\";\nimport Styles from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return (\n    <div className={Styles.Spinner}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React,{ Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./cards.css\";\r\n\r\n\r\nclass Cards extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render(){\r\n        let redirect = null;\r\n        if(this.state.redirect){\r\n            redirect = <Redirect to={\"/table/:\"+this.props.id}/>\r\n        }\r\n        return(\r\n            <div>\r\n            <div className=\"added-sites\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onSubmit}>{this.props.name}</Button>\r\n            </div>\r\n            {redirect}\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Card from '../cards/cards';\r\nimport \"./cardlist.css\"\r\n\r\nexport default function Cardlist(props){\r\n    console.log(props.sites);\r\n    return <div>\r\n    <div class=\"heading\"> <h2>Sites Under Monitor</h2></div>\r\n        <div className=\"card-list\">   \r\n        {props.sites.map(site => (\r\n            <Card id={site._id} name={site.link}/>\r\n        ))}\r\n        </div>\r\n    </div>;\r\n};","import React, { Component } from 'react';\r\nimport './main.css'\r\nimport { Button } from '@material-ui/core';\r\nimport Axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Cardlist from \"../cardlist/cardlist\";\r\n\r\nclass Main extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            page_url: \"\",\r\n            loading: false,\r\n            message: null,\r\n            sites: []\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        fetch('http://165.22.214.114/api/getScrapper',{\r\n            method: 'GET'\r\n        })\r\n            .then(res => res.json())\r\n            .then(sites => {\r\n                this.setState({sites: sites.sites})\r\n            });  \r\n    }\r\n\r\n    inputChange = (e) => {\r\n        this.setState({page_url: e.target.value});\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        this.setState({ message: null, willAppear: null });\r\n        e.preventDefault();\r\n        const pageUrl = this.state.page_url;\r\n        const url = \"http://165.22.214.114/api/addScrapper\";\r\n        try{\r\n            this.setState({loading: true});\r\n            const result = await Axios.post(url,{pageUrl: pageUrl});\r\n            console.log(result);\r\n            this.setState({\r\n                message: result.data.message\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    render(){\r\n        const sites = this.state.sites;\r\n        console.log(sites);\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <h2>Enter websites to monitor</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input id=\"input\" className=\"input\" placeholder=\"Add website\" onChange={this.inputChange}></input>\r\n                        <div className=\"btn\"><Button variant=\"contained\" type=\"submit\" color=\"primary\">Add Website</Button></div>\r\n                    </form>\r\n                </div>\r\n                {this.state.message ? (\r\n                    <div style={{ color: \"black\" }}><h3>{this.state.message}</h3></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {this.state.sites.length !== 0 ? <Cardlist sites={sites} /> : <h2>No sites under monitor.</h2>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React,{ Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Table from './component/table/table';\nimport Main from './component/main/main';\n\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Main />\n            </Route>\n            <Route path=\"/table/:id\">\n              <Table />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3lg6J\"};"],"sourceRoot":""}