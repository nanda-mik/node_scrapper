{"version":3,"sources":["component/table/table.js","component/Spinner/Spinner.js","component/cards/cards.js","component/cardlist/cardlist.js","component/main/main.js","App.js","index.js","component/Spinner/Spinner.module.css"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","width","container","maxHeight","App","classes","useState","rows","setState","React","page","setPage","rowsPerPage","setRowsPerPage","redirect","setRedirect","id","useParams","slice","useEffect","fetch","method","then","res","console","log","json","data","redir","to","className","Button","variant","onClick","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","align","TableBody","map","row","key","url","component","scope","lastmod","total_words","keyword","no_int_link","no_doF_link","no_noF_link","isKeyPresent_para","isKeyPresent_meta","isKeyPresent_title","title_length","meta_length","keyword_density","no_of_tags","no_of_brokeimg","no_other_link","isKeyPresent_img","no_of_img","author","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","Spinner","Styles","Cards","props","onSubmit","state","this","name","Component","Cardlist","sites","class","site","_id","link","Main","inputChange","e","page_url","handleSubmit","a","message","willAppear","preventDefault","pageUrl","loading","Axios","post","result","placeholder","onChange","type","style","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b473866f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './table.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 600\r\n  }\r\n});\r\n\r\nexport default function App(){\r\n    const classes = useStyles();\r\n    const [rows, setState] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n  \r\n    let {id} = useParams();\r\n    id = id.slice(1);\r\n    useEffect(()=>{\r\n      fetch('http://165.22.214.114/api/getData/'+id,{\r\n            method: 'GET'\r\n        })\r\n          .then(res => {\r\n\t\tconsole.log(res);\r\n\t\treturn res.json();\r\n\t})\r\n          .then(data => {\r\n\t\tconsole.log(data);\r\n\t\tsetState(data);\r\n\t})\r\n    })\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    \r\n    const handleChangeRowsPerPage = event => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n      setRedirect(true);\r\n    }\r\n\r\n    let redir = null;\r\n    if(redirect){\r\n      redir = <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"table\">\r\n         <div className=\"btn-table\"><Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Home</Button></div>\r\n        <h2>Content Analysis</h2>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Page URL</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Last modified</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Total WOrds</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keywords</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of int. links</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of do-follow ext. link</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of no-follow ext. link</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in 1st para</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in meta</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in title</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Title length</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Meta length</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword density</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of tags</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Broken image</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Other article linking.</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Keyword in image alt name</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">No of images</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Author anime</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map(row => (\r\n                    <StyledTableRow key={row.url}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">{row.url}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.lastmod}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.total_words}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.keyword}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_int_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_doF_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_noF_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_para}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_meta}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_title}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.title_length}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.meta_length}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.keyword_density}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_tags}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_brokeimg}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_other_link}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.isKeyPresent_img}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.no_of_img}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\">{row.author}</StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 15, 20]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        {redir}\r\n      </div>\r\n      );\r\n}\r\n","\n\nimport React from \"react\";\nimport Styles from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return (\n    <div className={Styles.Spinner}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React,{ Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./cards.css\";\r\n\r\n\r\nclass Cards extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render(){\r\n        let redirect = null;\r\n        if(this.state.redirect){\r\n            redirect = <Redirect to={\"/table/:\"+this.props.id}/>\r\n        }\r\n        return(\r\n            <div>\r\n            <div className=\"added-sites\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onSubmit}>{this.props.name}</Button>\r\n            </div>\r\n            {redirect}\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Card from '../cards/cards';\r\nimport \"./cardlist.css\"\r\n\r\nexport default function Cardlist(props){\r\n    console.log(props.sites);\r\n    return <div>\r\n    <div class=\"heading\"> <h2>Sites Under Monitor</h2></div>\r\n        <div className=\"card-list\">   \r\n        {props.sites.map(site => (\r\n            <Card id={site._id} name={site.link}/>\r\n        ))}\r\n        </div>\r\n    </div>;\r\n};","import React, { Component } from 'react';\r\nimport './main.css'\r\nimport { Button } from '@material-ui/core';\r\nimport Axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Cardlist from \"../cardlist/cardlist\";\r\n\r\nclass Main extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            page_url: \"\",\r\n            loading: false,\r\n            message: null,\r\n            sites: []\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        fetch('http://165.22.214.114/api/getScrapper',{\r\n            method: 'GET'\r\n        })\r\n            .then(res => res.json())\r\n            .then(sites => {\r\n                this.setState({sites: sites.sites})\r\n            });  \r\n    }\r\n\r\n    inputChange = (e) => {\r\n        this.setState({page_url: e.target.value});\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        this.setState({ message: null, willAppear: null });\r\n        e.preventDefault();\r\n        const pageUrl = this.state.page_url;\r\n        const url = \"http://165.22.214.114/api/addScrapper\";\r\n        try{\r\n            this.setState({loading: true});\r\n            const result = await Axios.post(url,{pageUrl: pageUrl});\r\n            console.log(result);\r\n            this.setState({\r\n                message: result.data.message\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    render(){\r\n        const sites = this.state.sites;\r\n        console.log(sites);\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <h2>Enter websites to monitor</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input id=\"input\" className=\"input\" placeholder=\"Add website\" onChange={this.inputChange}></input>\r\n                        <div className=\"btn\"><Button variant=\"contained\" type=\"submit\" color=\"primary\">Add Website</Button></div>\r\n                    </form>\r\n                </div>\r\n                {this.state.message ? (\r\n                    <div style={{ color: \"black\" }}><h3>{this.state.message}</h3></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {this.state.sites.length !== 0 ? <Cardlist sites={sites} /> : <h2>No sites under monitor.</h2>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React,{ Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Table from './component/table/table';\nimport Main from './component/main/main';\n\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Main />\n            </Route>\n            <Route path=\"/table/:id\">\n              <Table />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3lg6J\"};"],"sourceRoot":""}